version: "3.4"

volumes:
  mongodb_data:
    external: false
  mongodb_data_r1:
    external: false
  mongodb_data_r2:
    external: false

networks:
  cocoannotator:
    external: false

services:
  webserver:
    build:
      context: .
      dockerfile: ./Dockerfile.torch
    container_name: annotator_webclient
    restart: always
    ports:
      - "5000:5000"
    environment:
      - SECRET_KEY=RandomSecretKeyHere
      - FILE_WATCHER=true
      - NAME=Test Annotator
      - NVIDIA_VISIBLE_DEVICES=all
      - CUDA_DEVICE_NUM=0
      - TORCH_MASK_RCNN_FILE=/models/BONN_SweetPepper_Protected_2019.pth
      - TORCH_MASK_RCNN_CLASSES=BG,pepper
      - MASK_RCNN_FILE=/models/mask_rcnn_coco.h5
      - MASK_RCNN_CLASSES=
        BG,person,bicycle,car,motorcycle,airplane,
        bus,train,truck,boat,traffic light,
        fire hydrant,stop sign,parking meter,bench,bird,
        cat,dog,horse,sheep,cow,elephant,bear,
        zebra,giraffe,backpack,umbrella,handbag,tie,
        suitcase,frisbee,skis,snowboard,sports ball,
        kite,baseball bat,baseball glove,skateboard,
        surfboard,tennis racket,bottle,wine glass,cup,
        fork,knife,spoon,bowl,banana',apple,
        sandwich,orange,broccoli,carrot,hot dog,pizza,
        donut,cake,chair,couch,potted plant,bed,
        dining table,toilet,tv,laptop,mouse,remote,
        keyboard,cell phone,microwave,oven,toaster,
        sink,refrigerator,book,clock,vase,scissors,
        teddy bear,hair drier,toothbrush
    volumes:
      - "./datasets:/datasets"
      - "./models:/models"
      - "./backend/webserver:/workspace/webserver"
      - "./backend/config:/workspace/config"
    depends_on:
      - database
      - workers
    networks:
      - cocoannotator
  workers:
    container_name: annotator_workers
    build:
      context: .
      dockerfile: ./backend/workers/Dockerfile.torch
    volumes:
      - "./backend/config:/workspace/config"
      - "./backend/webserver:/workspace/webserver"
      - "./backend/workers:/workspace/workers"
      - "./backend/database:/workspace/database"
      - "./datasets:/datasets"
    depends_on:
      - messageq
      - database
    ports:
      - 5555:5555
    networks:
      - cocoannotator
  messageq:
    image: rabbitmq:3
    container_name: annotator_message_q
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - 5672:5672
    networks:
      - cocoannotator

  # database:
  #   image: mongo:4.0
  #   container_name: annotator_mongodb
  #   restart: always
  #   environment:
  #     - MONGO_DATA_DIR=/data/db
  #     - MONGO_LOG_DIR=/dev/null
  #   volumes:
  #     - "mongodb_data:/data/db"
  #   ports:
  #     - "27017:27017"
  #   command: "mongod --smallfiles --logpath=/dev/null"
  #   networks:
  #     - cocoannotator


  database:
    container_name: annotator_mongodb
    image: mongo:4.0
    ports:
      - 27017:27017
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - "mongodb_data:/data/db"
    entrypoint: [ "mongod","--smallfiles","--logpath=/dev/null","--port","27017", "--bind_ip_all",   "--replSet", "rs0" ]
    networks:
      - cocoannotator

  database_r1:
    container_name: annotator_mongodb_r1
    image: mongo:4.0
    ports:
      - 27027:27027
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - "mongodb_data_r1:/data/db"
    entrypoint: [ "mongod","--smallfiles","--logpath=/dev/null","--port","27027", "--bind_ip_all",   "--replSet", "rs0" ]
    networks:
      - cocoannotator

  database_r2:
    container_name: annotator_mongodb_r2
    image: mongo:4.0
    ports:
      - 27037:27037
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - "mongodb_data_r2:/data/db"
    entrypoint: [ "mongod","--smallfiles","--logpath=/dev/null","--port","27037", "--bind_ip_all",   "--replSet", "rs0" ]
    healthcheck:
      test: ["CMD","mongo","--host","database","--port","27017",  "--eval", 'rs.initiate( { _id : "rs0",members: [{ _id: 0,     host: "database:27017" },{ _id: 1, host: "database_r1:27027" },{   _id: 2, host: "database_r2:27037" }   ]})']
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - cocoannotator
    depends_on:
      - database
      - database_r1

  backup:
    build:
      context: ./mongo_backup
      dockerfile: ./Dockerfile
    container_name: annotator_backup
    volumes:
      - /tmp/backup:/backup
    depends_on:
      - database
    environment:
      - MONGO_HOST=database
      - MONGO_PORT=27017
      - CRON_TIME=* * * * *
      - BACKUP_OPTS="--oplog --gzip"
      - RESTORE_OPTS="--drop --oplogReplay --gzip"
    networks:
    - cocoannotator
